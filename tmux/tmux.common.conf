##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
#
# COPY AND PASTE
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"

# Use zsh over bash.
# set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l /usr/local/bin/zsh || /usr/local/bin/zsh"
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"
# set-option -g default-command "/usr/local/bin/zsh"
set-option -g pane-active-border-fg green

# utf8 support
set-window-option -g utf8 on


# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse

# Automatically set window title
setw -g automatic-rename
setw -g automatic-rename-format '#I'

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
# setw -g mode-mouse on
set -g mouse on
set -g mouse-utf8 on
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
# set -g mouse-select-pane on
# Enables native xterm mouse scrolling.
# The XT allows setting xterm titles (so the #H #S etc titles will work)
# http://unix.stackexchange.com/questions/75216/tmux-set-titles-doesnt-work
# set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'

# set -ga terminal-overrides 'XT'

# vi movement keys
# set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)

set-option -g set-titles on
# set-option -g set-titles-string '#H:#S.#I.#P #W #T'
# set-option -g set-titles-string 'this is a title'
# set-option -g set-titles-string '#W'
set-option -g set-titles-string '#W'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key M-r source-file ~/.tmux.conf

# swap window
bind-key P swap-window -t -1
bind-key N swap-window -t +1

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
bind-key - split-window -v -c "#{pane_current_path}" # split pane horizontally
bind-key \ split-window -h -c "#{pane_current_path}" # split pane vertically

# list panes
bind-key Space list-panes

# Break pane off into own window.
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src- ane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg red
# not working o
# bind C-j previous-window
# bind C-k next-window
bind J next-window
bind K previous-window
bind C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
set -g aggressive-resize off
# New windows open in the same directory as current.
bind c new-window -c "#{pane_current_path}"
# bind c new-window -c "$PWD"
############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind v select-layout "main-vertical"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind r rotate-window

#######
# fzf #
#######
# bind ??? run-shell "~/bin/fzf_tmux_session.sh"

# focus on first window
# select-window -t 0

# Index starts from 1
set-option -g base-index 1
# Needed by tmuxinator
set-window-option -g pane-base-index 1

# select-pane (@george-b)
bind-key 0 run "tmux split-window -p 40 'bash -ci ftpane'"

# source-file ~/.zenburn.conf
# setw -g clock-mode-colour colour117
# setw -g mode-attr bold
# setw -g mode-fg colour117
# setw -g mode-bg colour238
# set -g status-bg colour235
# set -g status-fg colour248
# set -g status-attr dim
# set -g status-left '#[fg=colour187,bold]#H'
# set -g status-right '#[fg=colour174]#(mpc) #[fg=colour187,bold]%H:%M:%S'
# set -g status-right-length 80
# setw -g window-status-current-fg colour223
# setw -g window-status-current-bg colour237
# setw -g window-status-current-attr bold
# set -g message-attr bold
# set -g message-fg colour117
# set -g message-bg colour235

###########
# Plugins #
###########
# To install new plugins, add a plugin line here, then
# hit prefix + I (I as in Install) to fetch the plugin
# To remove a plugin, remove the plugin line in this file, then
# hit prefix + alt + u (u as in uninstall) to remove the plugin
# All the plugins are installed to ~/.tmux/plugins/ so
# alternatively you can find plugin directory there and remove it.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
